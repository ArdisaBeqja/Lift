{"version":3,"file":"static/js/4679.480ef03b.chunk.js","mappings":"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","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","size","scrollbarSize","recalc","canUseDOM","scrollDiv","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","_excluded","ModalBody","React","ref","className","bsPrefix","as","Component","props","_objectWithoutProperties","useBootstrapPrefix","_jsx","_objectSpread","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","concat","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}