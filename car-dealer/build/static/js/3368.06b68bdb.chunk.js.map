{"version":3,"file":"static/js/3368.06b68bdb.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormContext.js"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;"],"names":["map","children","func","index","React","child","hasChildOfType","type","toArray","some","propTypes","PropTypes","tooltip","as","Feedback","_ref","ref","Component","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","classNames","concat","displayName","FormControl","bsPrefix","size","htmlSize","id","isValid","isInvalid","plaintext","readOnly","controlId","useContext","FormContext","useBootstrapPrefix","Object","assign","FormFloating","FormGroup","context","useMemo","Provider","value","FormLabel","column","visuallyHidden","htmlFor","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FormCheck","Input","Label","FloatingLabel","label","_jsxs","validated","Form","Group","Control","Floating","Check","Text","Range","Select","FormCheckInput","FormCheckLabel","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","innerFormContext","hasLabel","input","_Fragment"],"sourceRoot":""}